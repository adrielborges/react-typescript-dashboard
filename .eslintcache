[{"F:\\Documentos\\Algoritmos\\Template\\react-typescript-eslint-prettier\\src\\index.tsx":"1","F:\\Documentos\\Algoritmos\\Template\\react-typescript-eslint-prettier\\src\\App.tsx":"2","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\index.tsx":"3","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\App.tsx":"4","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\routes\\index.tsx":"5","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\pages\\SignIn\\index.tsx":"6","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\styles\\global.ts":"7","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\styles\\themes\\theme.ts":"8","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\pages\\SignIn\\styles.ts":"9","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\hooks\\index.tsx":"10","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\hooks\\Auth.tsx":"11","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\pages\\Dashboard\\index.tsx":"12","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\routes\\Route.tsx":"13","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\NavBar\\index.tsx":"14","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\NavBar\\styles.ts":"15","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\UserBar\\index.tsx":"16","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\UserBar\\styles.ts":"17","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\SearchBar\\index.tsx":"18","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\SearchBar\\styles.ts":"19","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\pages\\Dashboard\\styles.ts":"20","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\SideMenu\\index.tsx":"21","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\SideMenu\\styles.ts":"22","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\services\\api.ts":"23","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\ItemsSection\\index.tsx":"24","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\ItemsSection\\styles.ts":"25","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\hooks\\Tasks.tsx":"26","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\IconNameWrap\\index.tsx":"27","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\IconNameWrap\\styles.ts":"28"},{"size":501,"mtime":1608655002149,"results":"29","hashOfConfig":"30"},{"size":524,"mtime":1608655151927,"results":"31","hashOfConfig":"30"},{"size":198,"mtime":1608661268423,"results":"32","hashOfConfig":"33"},{"size":382,"mtime":1608685639925,"results":"34","hashOfConfig":"33"},{"size":436,"mtime":1608686779006,"results":"35","hashOfConfig":"33"},{"size":1430,"mtime":1608686470816,"results":"36","hashOfConfig":"33"},{"size":669,"mtime":1609042599154,"results":"37","hashOfConfig":"33"},{"size":552,"mtime":1609423954012,"results":"38","hashOfConfig":"33"},{"size":812,"mtime":1608666833395,"results":"39","hashOfConfig":"33"},{"size":267,"mtime":1609428761514,"results":"40","hashOfConfig":"33"},{"size":1581,"mtime":1608694846946,"results":"41","hashOfConfig":"33"},{"size":710,"mtime":1609422730173,"results":"42","hashOfConfig":"33"},{"size":768,"mtime":1608687598735,"results":"43","hashOfConfig":"33"},{"size":2280,"mtime":1609424055981,"results":"44","hashOfConfig":"33"},{"size":1941,"mtime":1609424127311,"results":"45","hashOfConfig":"33"},{"size":255,"mtime":1609047595432,"results":"46","hashOfConfig":"33"},{"size":578,"mtime":1609047315564,"results":"47","hashOfConfig":"33"},{"size":760,"mtime":1609169961625,"results":"48","hashOfConfig":"33"},{"size":915,"mtime":1609189458549,"results":"49","hashOfConfig":"33"},{"size":243,"mtime":1609422723271,"results":"50","hashOfConfig":"33"},{"size":1361,"mtime":1609431506832,"results":"51","hashOfConfig":"33"},{"size":678,"mtime":1609431537974,"results":"52","hashOfConfig":"33"},{"size":419,"mtime":1609421291937,"results":"53","hashOfConfig":"33"},{"size":2885,"mtime":1609440022514,"results":"54","hashOfConfig":"33"},{"size":1236,"mtime":1609437129375,"results":"55","hashOfConfig":"33"},{"size":1613,"mtime":1609450372697,"results":"56","hashOfConfig":"33"},{"size":580,"mtime":1609436278811,"results":"57","hashOfConfig":"33"},{"size":350,"mtime":1609434275730,"results":"58","hashOfConfig":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pvg0lo",{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"nkw0rk",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"65"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"65"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},"F:\\Documentos\\Algoritmos\\Template\\react-typescript-eslint-prettier\\src\\index.tsx",[],"F:\\Documentos\\Algoritmos\\Template\\react-typescript-eslint-prettier\\src\\App.tsx",["122"],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\index.tsx",[],["123","124","125","126","127"],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\App.tsx",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\routes\\index.tsx",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\pages\\SignIn\\index.tsx",["128","129","130","131"],"import React, { useState, useContext, EventHandler, FormEvent } from 'react';\n\nimport { RiDashboardLine } from 'react-icons/ri';\nimport { useHistory } from 'react-router-dom';\nimport { Container } from './styles';\nimport { useAuth } from '../../hooks/Auth';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { signIn } = useAuth();\n  const history = useHistory();\n\n  const handleSubmit = async (\n    e: FormEvent<HTMLFormElement>,\n    name: string,\n    loginPassword: string,\n  ) => {\n    e.preventDefault();\n\n    try {\n      await signIn({ name, password: loginPassword });\n      history.push('/dashboard');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <Container>\n      <RiDashboardLine />\n      <h1>Login</h1>\n      <form onSubmit={e => handleSubmit(e, email, password)}>\n        <input\n          type=\"text\"\n          name=\"login\"\n          placeholder=\"Usuário\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Senha\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n        <button type=\"submit\">Entrar</button>\n      </form>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\styles\\global.ts",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\styles\\themes\\theme.ts",["132"],"const themeLight = Boolean(localStorage.getItem('@ReactDashboard:theme'));\nconsole.log(themeLight);\n\nexport const light = {\n  colors: {\n    background: '#F6F6F6',\n    title: '#231F20',\n    text: '#231F20',\n    border_color: '#36444C',\n    button_text: '#F6F6F6',\n    button_Background: '#36444C',\n  },\n};\n\nexport const dark = {\n  colors: {\n    background: '#36444C',\n    title: '#F6F6F6',\n    text: '#F6F6F6',\n    border_color: '#F6F6F6',\n    button_text: '#231F20',\n    button_Background: '#F6F6F6',\n  },\n};\n\nexport default themeLight ? light : dark;\n","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\pages\\SignIn\\styles.ts",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\hooks\\index.tsx",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\hooks\\Auth.tsx",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\pages\\Dashboard\\index.tsx",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\routes\\Route.tsx",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\NavBar\\index.tsx",["133","134"],"import React, { useState } from 'react';\n\nimport { HiMenu } from 'react-icons/hi';\nimport { MdExitToApp } from 'react-icons/md';\n\nimport { useHistory } from 'react-router-dom';\nimport { stringify } from 'querystring';\nimport { Nav, HelpMenu, ConfigMenu } from './styles';\nimport { useAuth } from '../../hooks/Auth';\n\nconst NavBar: React.FC = () => {\n  const [hiddenHelp, setHiddenHelp] = useState(false);\n  const [hiddenConfig, setHiddenConfig] = useState(false);\n  const { signOut } = useAuth();\n  const history = useHistory();\n\n  const handleSingOut = () => {\n    signOut();\n    history.push('/');\n  };\n  const handleChangeTheme = () => {\n    const theme = Boolean(localStorage.getItem('@ReactDashboard:theme'));\n    const changeValueTheme = !theme;\n    console.log(changeValueTheme);\n\n    localStorage.setItem('@ReactDashboard:theme', changeValueTheme.toString());\n  };\n\n  return (\n    <Nav>\n      <div>\n        <HiMenu />\n      </div>\n      <div>\n        <button type=\"button\" onClick={() => setHiddenHelp(!hiddenHelp)}>\n          Ajuda\n        </button>\n        {hiddenHelp && (\n          <HelpMenu>\n            <ul>\n              <li>\n                <button type=\"button\">Pt-Br</button>\n              </li>\n              <li>\n                <button type=\"button\">En-Us</button>\n              </li>\n              <li>\n                <button type=\"button\">Es-Es</button>\n              </li>\n            </ul>\n          </HelpMenu>\n        )}\n\n        <button type=\"button\" onClick={() => setHiddenConfig(!hiddenConfig)}>\n          Configurações\n        </button>\n        {hiddenConfig && (\n          <ConfigMenu>\n            <ul>\n              <li>\n                <button type=\"button\" onClick={() => handleChangeTheme()}>\n                  Tema Dark\n                </button>\n              </li>\n              <li>\n                <button type=\"button\" onClick={() => handleChangeTheme()}>\n                  Tema Light\n                </button>\n              </li>\n              <li>\n                <button type=\"button\" onClick={() => handleSingOut()}>\n                  Logout\n                  <MdExitToApp />\n                </button>\n              </li>\n            </ul>\n          </ConfigMenu>\n        )}\n      </div>\n    </Nav>\n  );\n};\n\nexport default NavBar;\n","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\NavBar\\styles.ts",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\UserBar\\index.tsx",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\UserBar\\styles.ts",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\SearchBar\\index.tsx",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\SearchBar\\styles.ts",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\pages\\Dashboard\\styles.ts",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\SideMenu\\index.tsx",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\SideMenu\\styles.ts",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\services\\api.ts",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\ItemsSection\\index.tsx",["135"],"import React, { useState } from 'react';\n\nimport { RiArrowRightSFill, RiChat4Fill } from 'react-icons/ri';\nimport { useTasks } from '../../hooks/Tasks';\nimport IconNameWrap from '../IconNameWrap';\n\nimport {\n  Container,\n  ContainerItem,\n  NameWrap,\n  ContainerCheckIcon,\n  ContainerWrapItemsRigth,\n  ContainerIconWrapUsers,\n} from './styles';\n\ninterface IItem {\n  id: number;\n  subMenus: IsubMenuItem[];\n}\ninterface IsubMenuItem {\n  id: number;\n  name: string;\n  owner: string;\n  subject: string;\n  users: string[];\n}\n\nconst ItemsSection: React.FC = () => {\n  const [isCheckedVisable, setIsCheckedVisable] = useState(false);\n  const [isChecked, setIsChecked] = useState(false);\n  const [taskSelected, setTaskSelected] = useState<string[]>([]);\n\n  const { stateFilteredTasks } = useTasks();\n\n  const handleIsChecked = () => {\n    setIsCheckedVisable(!isCheckedVisable);\n  };\n\n  const handleAddSelectedTasks = (id: string) => {\n    const findTaskId = taskSelected.find(task => task === id);\n    if (findTaskId) {\n      const newTaskId = taskSelected.filter(task => task !== id);\n      setTaskSelected(newTaskId);\n      return setIsChecked(true);\n    }\n    setTaskSelected(oldState => [...oldState, id]);\n    return setIsChecked(true);\n  };\n\n  return (\n    <Container>\n      {stateFilteredTasks.map(task => (\n        <div key={task.id}>\n          {task.subMenuItems.map(item => (\n            <ContainerItem key={item.id}>\n              <NameWrap>\n                <ContainerCheckIcon\n                  onMouseEnter={handleIsChecked}\n                  onMouseLeave={handleIsChecked}\n                >\n                  {(isCheckedVisable || isChecked) && (\n                    <input\n                      type=\"checkbox\"\n                      onChange={() => handleAddSelectedTasks(item.id)}\n                    />\n                  )}\n                  {!isChecked && !isCheckedVisable && (\n                    <IconNameWrap owner={item.owner} />\n                  )}\n                </ContainerCheckIcon>\n                <div>\n                  <span>\n                    <b>{item.name}</b>\n                  </span>\n\n                  <span>\n                    <RiChat4Fill />\n                    {item.subject}\n                  </span>\n\n                  <span>\n                    <RiArrowRightSFill size={25} />\n                    Tarefa 1\n                  </span>\n                </div>\n              </NameWrap>\n\n              <ContainerWrapItemsRigth>\n                <span> hoje, 15:54 </span>\n\n                <ContainerIconWrapUsers>\n                  {item.users.map(user => (\n                    <IconNameWrap key={user} owner={item.owner} />\n                  ))}\n                </ContainerIconWrapUsers>\n              </ContainerWrapItemsRigth>\n            </ContainerItem>\n          ))}\n        </div>\n      ))}\n    </Container>\n  );\n};\n\nexport default ItemsSection;\n","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\ItemsSection\\styles.ts",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\hooks\\Tasks.tsx",["136"],"import React, {\n  createContext,\n  useCallback,\n  useState,\n  useContext,\n  useEffect,\n} from 'react';\nimport api from '../services/api';\n\ninterface IItem {\n  id: number;\n  subMenuItems: [\n    {\n      id: string;\n      name: string;\n      subject: string;\n      owner: string;\n      users: string[];\n    },\n  ];\n}\n\ninterface IContext {\n  handleFilterIdTask(id: number): void;\n  tasks: IItem[];\n  stateFilteredTasks: IItem[];\n}\n\nexport const TaskContext = createContext({} as IContext);\n\nexport const TaskProvider: React.FC = ({ children }) => {\n  const [tasks, setTasks] = useState<IItem[]>([]);\n  const [stateFilteredTasks, setStateFilteredTasks] = useState<IItem[]>([]);\n\n  useEffect(() => {\n    (async function loadTasks() {\n      const { data } = await api.get('/items');\n\n      setTasks(data);\n    })();\n  }, []);\n\n  const handleFilterIdTask = useCallback(\n    (id: number) => {\n      const filteredTasks = tasks.filter(task => task.id === id);\n\n      setStateFilteredTasks(filteredTasks);\n    },\n    [tasks],\n  );\n\n  const handleDeleteSelectedTask = useCallback((selectedTask: string[]) => {\n    const submenuItems = tasks.map(task=>task.subMenuItems);\n\n    selectedTask.forEach(taskId=>{\n      submenuItems.filter(item=>item.id\n    });\n  },\n  []);\n\n  return (\n    <TaskContext.Provider\n      value={{ handleFilterIdTask, tasks, stateFilteredTasks }}\n    >\n      {children}\n    </TaskContext.Provider>\n  );\n};\n\nexport function useTasks(): IContext {\n  const context = useContext(TaskContext);\n\n  if (!context) {\n    throw new Error('useTasks must be used within an AuthProvider ');\n  }\n\n  return context;\n}\n","F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\IconNameWrap\\index.tsx",[],"F:\\Documentos\\Algoritmos\\Testes\\react-typescript-dashboard\\src\\components\\IconNameWrap\\styles.ts",[],["137","138","139","140","141"],{"ruleId":"142","severity":1,"message":"143","line":5,"column":1,"nodeType":"144","messageId":"145","endLine":5,"endColumn":15},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":37},{"ruleId":"156","severity":1,"message":"160","line":1,"column":39,"nodeType":"158","messageId":"159","endLine":1,"endColumn":51},{"ruleId":"156","severity":1,"message":"161","line":8,"column":11,"nodeType":"158","messageId":"159","endLine":8,"endColumn":25},{"ruleId":"162","severity":1,"message":"163","line":30,"column":7,"nodeType":"164","messageId":"165","endLine":30,"endColumn":18},{"ruleId":"162","severity":1,"message":"163","line":2,"column":1,"nodeType":"164","messageId":"165","endLine":2,"endColumn":12},{"ruleId":"156","severity":1,"message":"166","line":7,"column":10,"nodeType":"158","messageId":"159","endLine":7,"endColumn":19},{"ruleId":"162","severity":1,"message":"163","line":24,"column":5,"nodeType":"164","messageId":"165","endLine":24,"endColumn":16},{"ruleId":"156","severity":1,"message":"167","line":16,"column":11,"nodeType":"158","messageId":"159","endLine":16,"endColumn":16},{"ruleId":null,"fatal":true,"severity":2,"message":"168","line":57,"column":4},{"ruleId":"146","replacedBy":"169"},{"ruleId":"148","replacedBy":"170"},{"ruleId":"150","replacedBy":"171"},{"ruleId":"152","replacedBy":"172"},{"ruleId":"154","replacedBy":"173"},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","lines-around-directive",["174"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'EventHandler' is defined but never used.","'SignInFormData' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'stringify' is defined but never used.","'IItem' is defined but never used.","Parsing error: ',' expected.",["174"],[],[],[],[],"padding-line-between-statements"]